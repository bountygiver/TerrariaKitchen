# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: 
      - 'main'
      - 'releases/*'
    tags:
      - v*
      - test-*
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - uses: actions/checkout@v4
      with:
        repository: 'Pryaxis/TShock'
        ref: 'nuget-release'
        path: './tshock'
      name: Checkout TShock
    - name: Setup .NET
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: '6.0.x'
    - name: Build TShock
      working-directory: './tshock/TShockLauncher'
      run: dotnet publish -r win-x64 -f net6.0 -c Release -p:PublishSingleFile=true --self-contained false
    - name: Copy Tshock Files
      shell: bash
      run: |
          cp ./tshock/TShockLauncher/bin/Release/net6.0/win-x64/publish/bin/OTAPI.dll ./tshock/TShockLauncher/bin/Release/net6.0/win-x64/publish/bin/TerrariaServer.dll ./tshock/TShockLauncher/bin/Release/net6.0/win-x64/publish/ServerPlugins/TShockAPI.dll ./
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -c Release
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Publish
      run: dotnet publish --no-build TerrariaKitchen.csproj -o TKitchen
    - name: Archive Plugin Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Plugin Package
        path: |
          ./TKitchen
